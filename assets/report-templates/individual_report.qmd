---
title: "meta_id"
format:
    html:
        grid:
            body-width: 900px
        toc: true
        code-fold: true
        code-tools: true
---

## QC

### mosdepth coverage plots

```{=html}
<figure style="width:100%;height:100%;">
    <iframe src="meta_id.dist.html" style="width:900px;height:1000px;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
    <figcaption>Mosdepth coverage plots.</figcaption>
</figure>
```

### nanocomp plots

```{=html}
<iframe src="meta_id_NanoComp_log_length_violin.html" style="width:100%;height:100vh;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
```

```{=html}
<iframe src="meta_id_NanoComp_number_of_reads.html" style="width:100%;height:100vh;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
```

```{=html}
<iframe src="meta_id_NanoComp_N50.html" style="width:100%;height:100vh;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
```

```{=html}
<iframe src="meta_id_NanoComp_percentIdentity_violin.html" style="width:100%;height:100vh;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
```

```{=html}
<iframe src="meta_id_NanoComp_quals_violin.html" style="width:100%;height:100vh;overflow:hidden;margin:0px;padding:0px;border:none;"></iframe>
```

## Phasing Report

### Cumulative sum of CGI Coverage

```{r}
#| label: fig-cumulative-sum-CGI-cover
#| fig-cap: "Cumulative sum of CGI Coverage"
#| column: page

suppressMessages(library(tidyverse))
suppressMessages(library(cowplot))
suppressMessages(library(plyranges))
suppressMessages(library(ggridges))
options(width=200)

#read in the blocks, old and updated LC data
df <- read_tsv("blocks_stats_file", show_col_types=FALSE) %>% mutate(patient = "LC", retina = "no")

#read in the CGIs
CGI <- read_tsv("CGI_bed_file", col_names = c("chr","start","end","N_CpG","length","CpGs","extra1","extra2","extra3","extra4"), show_col_types=FALSE)

#count CpG islands per block.
dfGR <- as_granges(df, seqnames = chromosome, start = from, end = to)
CGIGR <- as_granges(CGI, seqnames = chr)

df$CGI_olaps <- count_overlaps(dfGR, CGIGR)

#cumulative sum:
dforder <- arrange(df,desc(CGI_olaps)) %>% group_by(retina) %>% mutate(rn = row_number())

#reorder retina factors
#dforder$retina <- as.factor(dforder$retina, levels = c("yes","no"))

p <- ggplot(dforder, aes(x = rn, y = cumsum(CGI_olaps), linetype = retina)) + geom_step(data = subset(dforder, retina == "yes"), colour = "red") + geom_step(data = subset(dforder, retina == "no"), colour = "red") +
    labs(title = "Cumulative plot", y = "CGIs overlapped", x = "phase block") + theme_half_open() +
  background_grid() + xlim(c(0,250))
p
#save_plot("meta_id_cumulative_plot_CGI_olaps_fig3b.png",p)
#save_plot("meta_id_cumulative_plot_CGI_olaps_fig3b.svg",p)
#save_plot("meta_id_cumulative_plot_CGI_olaps_fig3b.pdf",p)
```